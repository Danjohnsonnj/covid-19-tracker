{"version":3,"sources":["historic.js"],"names":["document","addEventListener","stateSelect","getElementById","chartElements","querySelectorAll","dayElements","posBarElements","deathsBarElements","dateElements","updateResults","location","value","getCovidData","state","url","response","fetch","status","console","log","data","json","formatResults","r","fieldsToDisplay","week","slice","filteredResults","map","day","results","forEach","field","fetchResponse","formattedResults","largestPos","reduce","acc","positiveIncrease","largestD","deathIncrease","result","index","posBarEl","style","height","dataset","total","nextElementSibling","innerText","Date","lastUpdateEt","toLocaleDateString","deathsBarEl","evt","currentTarget"],"mappings":"AAAAA,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAY;AACxD,QAAMC,WAAW,GAAGF,QAAQ,CAACG,cAAT,CAAwB,aAAxB,CAApB;AACA,QAAMC,aAAa,GAAGJ,QAAQ,CAACK,gBAAT,CAA0B,QAA1B,CAAtB;AACA,QAAMC,WAAW,GAAGN,QAAQ,CAACK,gBAAT,CAA0B,MAA1B,CAApB;AACA,QAAME,cAAc,GAAGP,QAAQ,CAACK,gBAAT,CAA0B,MAA1B,CAAvB;AACA,QAAMG,iBAAiB,GAAGR,QAAQ,CAACK,gBAAT,CAA0B,SAA1B,CAA1B;AACA,QAAMI,YAAY,GAAGT,QAAQ,CAACK,gBAAT,CAA0B,OAA1B,CAArB;;AAEA,iBAAeK,aAAf,CAA6BC,QAAQ,GAAGT,WAAW,GAAGA,WAAW,CAACU,KAAf,GAAuB,IAA1E,EAAgF;AAC9E,UAAMC,YAAY,GAAG,gBAAgBC,KAAK,GAAGH,QAAxB,EAAkC;AACrD,YAAMI,GAAG,GAAI,2CAA0CD,KAAM,aAA7D;AACA,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;;AACA,UAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CACE,kDAAkDJ,QAAQ,CAACE,MAD7D;AAGA;AACD;;AAED,YAAMG,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACA,aAAOD,IAAP;AACD,KAZD;;AAcA,UAAME,aAAa,GAAG,UAAUC,CAAV,EAAa;AACjC,YAAMC,eAAe,GAAG,CACtB,cADsB,EAEtB,eAFsB,EAGtB,kBAHsB,CAAxB;AAKA,YAAMC,IAAI,GAAGF,CAAC,CAACG,KAAF,CAAQ,CAAR,EAAW,CAAX,CAAb;AACA,YAAMC,eAAe,GAAGF,IAAI,CAACG,GAAL,CAASC,GAAG,IAAI;AACtC,cAAMC,OAAO,GAAG,EAAhB;AACAN,QAAAA,eAAe,CAACO,OAAhB,CAAwBC,KAAK,IAAI;AAC/BF,UAAAA,OAAO,CAACE,KAAD,CAAP,GAAiBH,GAAG,CAACG,KAAD,CAApB;AACD,SAFD;AAGA,eAAOF,OAAP;AACD,OANuB,CAAxB;AAQA,aAAOH,eAAP;AACD,KAhBD;;AAkBA,UAAMM,aAAa,GAAG,MAAMrB,YAAY,CAACF,QAAD,CAAxC;AACA,UAAMwB,gBAAgB,GAAGZ,aAAa,CAACW,aAAD,CAAtC;AAEA,UAAME,UAAU,GAAGD,gBAAgB,CAACE,MAAjB,CAAwB,CAACC,GAAD,EAAMR,GAAN,KAAc;AACvDQ,MAAAA,GAAG,GAAGR,GAAG,CAACS,gBAAJ,GAAuBD,GAAvB,GAA6BR,GAAG,CAACS,gBAAjC,GAAoDD,GAA1D;AACA,aAAOA,GAAP;AACD,KAHkB,EAGhB,CAHgB,CAAnB;AAIA,UAAME,QAAQ,GAAGL,gBAAgB,CAACE,MAAjB,CAAwB,CAACC,GAAD,EAAMR,GAAN,KAAc;AACrDQ,MAAAA,GAAG,GAAGR,GAAG,CAACW,aAAJ,GAAoBH,GAApB,GAA0BR,GAAG,CAACW,aAA9B,GAA8CH,GAApD;AACA,aAAOA,GAAP;AACD,KAHgB,EAGd,CAHc,CAAjB;AAKAH,IAAAA,gBAAgB,CAACH,OAAjB,CAAyB,CAACU,MAAD,EAASC,KAAT,KAAmB;AAC1C,YAAMC,QAAQ,GAAGrC,cAAc,CAACoC,KAAD,CAA/B;AACAC,MAAAA,QAAQ,CAACC,KAAT,CAAeC,MAAf,GAAyB,GAAEJ,MAAM,CAACH,gBAAP,GAA0BH,UAA1B,GAAuC,GAAI,GAAtE;AACAQ,MAAAA,QAAQ,CAACG,OAAT,CAAiBC,KAAjB,GAA0B,GAAEN,MAAM,CAACH,gBAAiB,EAApD;AACAK,MAAAA,QAAQ,CAACK,kBAAT,CAA4BC,SAA5B,GAAwC,IAAIC,IAAJ,CAAST,MAAM,CAACU,YAAhB,EAA8BC,kBAA9B,EAAxC;AAEA,YAAMC,WAAW,GAAG9C,iBAAiB,CAACmC,KAAD,CAArC;AACAW,MAAAA,WAAW,CAACT,KAAZ,CAAkBC,MAAlB,GAA2BN,QAAQ,GAAG,CAAX,GACxB,GAAEE,MAAM,CAACD,aAAP,GAAuBD,QAAvB,GAAkC,GAAI,GADhB,GAEzB,CAFF;AAGAc,MAAAA,WAAW,CAACP,OAAZ,CAAoBC,KAApB,GAA6B,GAAEN,MAAM,CAACD,aAAc,EAApD;AACAa,MAAAA,WAAW,CAACL,kBAAZ,CAA+BC,SAA/B,GAA2C,IAAIC,IAAJ,CAAST,MAAM,CAACU,YAAhB,EAA8BC,kBAA9B,EAA3C;AACD,KAZD;AAaD;;AAEDnD,EAAAA,WAAW,CAACD,gBAAZ,CAA6B,QAA7B,EAAwCsD,GAAD,IAAS;AAC9C7C,IAAAA,aAAa,CAAC6C,GAAG,CAACC,aAAJ,CAAkB5C,KAAnB,CAAb;AACD,GAFD;AAIAF,EAAAA,aAAa;AACd,CAzED","file":"historic.81610466.js","sourceRoot":"..","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", async () => {\n  const stateSelect = document.getElementById(\"StateSelect\");\n  const chartElements = document.querySelectorAll('.chart')\n  const dayElements = document.querySelectorAll('.day')\n  const posBarElements = document.querySelectorAll('.pos')\n  const deathsBarElements = document.querySelectorAll('.deaths')\n  const dateElements = document.querySelectorAll('.date')\n\n  async function updateResults(location = stateSelect ? stateSelect.value : 'nj') {\n    const getCovidData = async function (state = location) {\n      const url = `https://api.covidtracking.com/v1/states/${state}/daily.json`;\n      const response = await fetch(url);\n      if (response.status !== 200) {\n        console.log(\n          \"Looks like there was a problem. Status Code: \" + response.status\n        );\n        return;\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    const formatResults = function (r) {\n      const fieldsToDisplay = [\n        \"lastUpdateEt\",\n        \"deathIncrease\",\n        \"positiveIncrease\",\n      ];\n      const week = r.slice(0, 7)\n      const filteredResults = week.map(day => {\n        const results = {}\n        fieldsToDisplay.forEach(field => {\n          results[field] = day[field]\n        })\n        return results\n      })\n\n      return filteredResults\n    };\n\n    const fetchResponse = await getCovidData(location);\n    const formattedResults = formatResults(fetchResponse);\n\n    const largestPos = formattedResults.reduce((acc, day) => {\n      acc = day.positiveIncrease > acc ? day.positiveIncrease : acc\n      return acc\n    }, 0)\n    const largestD = formattedResults.reduce((acc, day) => {\n      acc = day.deathIncrease > acc ? day.deathIncrease : acc\n      return acc\n    }, 0)\n\n    formattedResults.forEach((result, index) => {\n      const posBarEl = posBarElements[index]\n      posBarEl.style.height = `${result.positiveIncrease / largestPos * 100}%`\n      posBarEl.dataset.total = `${result.positiveIncrease}`\n      posBarEl.nextElementSibling.innerText = new Date(result.lastUpdateEt).toLocaleDateString()\n\n      const deathsBarEl = deathsBarElements[index]\n      deathsBarEl.style.height = largestD > 0 ?\n        `${result.deathIncrease / largestD * 100}%` :\n        0\n      deathsBarEl.dataset.total = `${result.deathIncrease}`\n      deathsBarEl.nextElementSibling.innerText = new Date(result.lastUpdateEt).toLocaleDateString()\n    })\n  }\n\n  stateSelect.addEventListener(\"change\", (evt) => {\n    updateResults(evt.currentTarget.value);\n  });\n\n  updateResults();\n});\n"]}
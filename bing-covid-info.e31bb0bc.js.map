{"version":3,"sources":["index.js"],"names":["document","addEventListener","stateSelect","getElementById","updateResults","location","value","getCovidData","state","url","response","fetch","status","console","log","data","json","formatResults","r","deprecatedData","filteredResults","Object","keys","reduce","acc","key","includes","date","Date","lastUpdateEt","updated","toDateString","toLocaleTimeString","results","positiveCases","positiveCasesViral","positiveIncrease","recovered","death","deathIncrease","hospitalizedCurrently","hospitalizedIncrease","inIcuCurrently","fetchResponse","formattedResults","forEach","innerHTML","evt","currentTarget"],"mappings":"AAAAA,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAY;AACxD,QAAMC,WAAW,GAAGF,QAAQ,CAACG,cAAT,CAAwB,aAAxB,CAApB;;AAEA,iBAAeC,aAAf,CAA6BC,QAAQ,GAAGH,WAAW,CAACI,KAApD,EAA2D;AACzD,UAAMC,YAAY,GAAG,gBAAgBC,KAAK,GAAGH,QAAxB,EAAkC;AACrD,YAAMI,GAAG,GAAI,2CAA2CD,KAAO,eAA/D;AACA,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;;AACA,UAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAY,kDACVJ,QAAQ,CAACE,MADX;AAEA;AACD;;AAED,YAAMG,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACA,aAAOD,IAAP;AACD,KAXD;;AAaA,UAAME,aAAa,GAAG,UAAUC,CAAV,EAAa;AACjC,YAAMC,cAAc,GAAG,CACrB,aADqB,EAErB,iBAFqB,EAGrB,aAHqB,EAIrB,cAJqB,EAKrB,OALqB,EAMrB,MANqB,EAOrB,cAPqB,EAQrB,kBARqB,EASrB,sBATqB,EAUrB,eAVqB,EAWrB,QAXqB,EAYrB,eAZqB,EAarB,OAbqB,EAcrB,OAdqB,CAAvB;AAgBA,YAAMC,eAAe,GAAGC,MAAM,CAACC,IAAP,CAAYJ,CAAZ,EAAeK,MAAf,CAAsB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC1D,YAAI,CAACN,cAAc,CAACO,QAAf,CAAwBD,GAAxB,CAAL,EAAmC;AACjCD,UAAAA,GAAG,CAACC,GAAD,CAAH,GAAWP,CAAC,CAACO,GAAD,CAAD,IAAU,cAArB;AACD;;AACD,eAAOD,GAAP;AACD,OALuB,EAKrB,EALqB,CAAxB;AAOA,YAAMG,IAAI,GAAG,IAAIC,IAAJ,CAASR,eAAe,CAACS,YAAzB,CAAb;AACA,YAAMC,OAAO,GAAI,cAAaH,IAAI,CAACI,YAAL,EAAoB,OAAMJ,IAAI,CAACK,kBAAL,EAA0B,GAAlF;AACA,YAAMC,OAAO,GAAG;AACdH,QAAAA,OADc;AAEdI,QAAAA,aAAa,EAAEd,eAAe,CAACe,kBAFjB;AAGdC,QAAAA,gBAAgB,EAAEhB,eAAe,CAACgB,gBAHpB;AAIdC,QAAAA,SAAS,EAAEjB,eAAe,CAACiB,SAJb;AAKdC,QAAAA,KAAK,EAAElB,eAAe,CAACkB,KALT;AAMdC,QAAAA,aAAa,EAAEnB,eAAe,CAACmB,aANjB;AAOdC,QAAAA,qBAAqB,EAAEpB,eAAe,CAACoB,qBAPzB;AAQdC,QAAAA,oBAAoB,EAAErB,eAAe,CAACqB,oBARxB;AASdC,QAAAA,cAAc,EAAEtB,eAAe,CAACsB;AATlB,OAAhB;AAWA,aAAOT,OAAP;AACD,KAtCD;;AAwCA,UAAMU,aAAa,GAAG,MAAMpC,YAAY,CAACF,QAAD,CAAxC;AACA,UAAMuC,gBAAgB,GAAG3B,aAAa,CAAC0B,aAAD,CAAtC;AACA9B,IAAAA,OAAO,CAACC,GAAR,CAAY8B,gBAAZ;AAEAvB,IAAAA,MAAM,CAACC,IAAP,CAAYsB,gBAAZ,EAA8BC,OAA9B,CAAsCpB,GAAG,IAAI;AAC3CzB,MAAAA,QAAQ,CAACG,cAAT,CAAyB,GAAEsB,GAAI,EAA/B,EAAkCqB,SAAlC,GAA8CF,gBAAgB,CAACnB,GAAD,CAA9D;AACD,KAFD;AAGD;;AAEDvB,EAAAA,WAAW,CAACD,gBAAZ,CAA6B,QAA7B,EAAwC8C,GAAD,IAAS;AAC9ClC,IAAAA,OAAO,CAACC,GAAR,CAAYiC,GAAG,CAACC,aAAJ,CAAkB1C,KAA9B;AACAF,IAAAA,aAAa,CAAC2C,GAAG,CAACC,aAAJ,CAAkB1C,KAAnB,CAAb;AACD,GAHD;AAKAF,EAAAA,aAAa;AACd,CAxED","file":"bing-covid-info.e31bb0bc.js","sourceRoot":"..","sourcesContent":["document.addEventListener('DOMContentLoaded', async () => {\n  const stateSelect = document.getElementById('StateSelect')\n\n  async function updateResults(location = stateSelect.value) {\n    const getCovidData = async function (state = location) {\n      const url = `https://covidtracking.com/api/v1/states/${ state }/current.json`;\n      const response = await fetch(url)\n      if (response.status !== 200) {\n        console.log('Looks like there was a problem. Status Code: ' +\n          response.status);\n        return;\n      }\n\n      const data = await response.json()\n      return data;\n    };\n\n    const formatResults = function (r) {\n      const deprecatedData = [\n        'checkTimeEt',\n        'commercialScore',\n        'dateChecked',\n        'dateModified',\n        'grade',\n        'hash',\n        'hospitalized',\n        'negativeIncrease',\n        'negativeRegularScore',\n        'negativeScore',\n        'posNeg',\n        'positiveScore',\n        'score',\n        'total',\n      ]\n      const filteredResults = Object.keys(r).reduce((acc, key) => {\n        if (!deprecatedData.includes(key)) {\n          acc[key] = r[key] || 'not reported';\n        }\n        return acc;\n      }, {});\n\n      const date = new Date(filteredResults.lastUpdateEt);\n      const updated = `Updated on ${date.toDateString()} at ${date.toLocaleTimeString()}.`;\n      const results = {\n        updated,\n        positiveCases: filteredResults.positiveCasesViral,\n        positiveIncrease: filteredResults.positiveIncrease,\n        recovered: filteredResults.recovered,\n        death: filteredResults.death,\n        deathIncrease: filteredResults.deathIncrease,\n        hospitalizedCurrently: filteredResults.hospitalizedCurrently,\n        hospitalizedIncrease: filteredResults.hospitalizedIncrease,\n        inIcuCurrently: filteredResults.inIcuCurrently,\n      };\n      return results;\n    }\n\n    const fetchResponse = await getCovidData(location);\n    const formattedResults = formatResults(fetchResponse);\n    console.log(formattedResults);\n\n    Object.keys(formattedResults).forEach(key => {\n      document.getElementById(`${key}`).innerHTML = formattedResults[key];\n    });\n  }\n\n  stateSelect.addEventListener('change', (evt) => {\n    console.log(evt.currentTarget.value)\n    updateResults(evt.currentTarget.value);\n  })\n\n  updateResults()\n})"]}